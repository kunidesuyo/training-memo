// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  id        Int        @id @default(autoincrement())
  year      Int
  month     Int
  day       Int
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int
  exercises Exercise[]

  @@unique([year, month, day, authorId])
}

model Exercise {
  id        Int                @id @default(autoincrement())
  name      String             @db.VarChar(255)
  workout   Workout            @relation(fields: [workoutId], references: [id])
  workoutId Int
  order     Int
  workItems WorkExerciseItem[]
  restItems RestExerciseItem[]

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  @@unique([workoutId, order])
}

model WorkExerciseItem {
  id         Int      @id @default(autoincrement())
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId Int
  weight     Int
  rep        Int
  order      Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  @@unique([exerciseId, order])
}

model RestExerciseItem {
  id         Int      @id @default(autoincrement())
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId Int
  time       Int
  order      Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  @@unique([exerciseId, order])
}

model User {
  id                Int                @id @default(autoincrement())
  name              String?
  email             String
  clerkId           String             @unique // ClerkのユーザーID
  Workouts          Workout[]
  Exercises         Exercise[]
  WorkExerciseItems WorkExerciseItem[]
  RestExerciseItems RestExerciseItem[]
}
